import requests, bs4, re, csv

def remove_spaces_and_tag(blank_word):
    blank_word = blank_word.strip()
    blank_word = blank_word.strip("\n")
    return blank_word

def main():
    webpage_No = int(input("請輸入起始卡片網頁編號")) #輸入起始卡片網頁編號
    webpage_No_end = int(input("請輸入結尾卡片網頁編號"))
    csvFile = open("PTCG_data " + str(webpage_No) +" to " +str(webpage_No_end) + ".csv", 'w', newline = '', encoding= 'UTF-8') 
    csvWriter = csv.writer(csvFile)
    csvWriter.writerow(['webpage_No', 'Handle', '卡名', '彈數 (Tags)', '編號', '種類', '對戰標記', '卡圖連結']) #填寫headings
    
    for webpage_No in range(webpage_No, webpage_No_end+1):
        url = "https://asia.pokemon-card.com/hk/card-search/detail/" + str(webpage_No)
        htmlfile = requests.get(url)

        if htmlfile.status_code != 200:
            csvWriter.writerow(["網頁下載失敗，狀態為:" + str(htmlfile.status_code)])
            #記錄錯誤網頁編號
            continue #提早結束迴圈，繼續執行下一次迴圈
            
        
        objSoup = bs4.BeautifulSoup(htmlfile.text, 'lxml')

        try: 
            種類 = objSoup.find('h3', class_ ="commonHeader").text
        except:
            種類 = "Error"
        else:
            種類 = remove_spaces_and_tag(種類) #清除資料前後的空格和換行標記
            if 種類 == "基本能量卡": #討論是否不需要保存基本能量卡資料。結論：不需要
                continue #提早結束迴圈，繼續執行下一次迴圈
            elif 種類 == "招式": 
                種類 = "寶可夢卡"
        
        卡名 = objSoup.find('li', class_ ="current").text
        卡名 = remove_spaces_and_tag(卡名) #清除資料前後的空格和換行標記
        if 卡名 == "1":
            卡名 = 'Error'

        #討論需不需要分類寶可夢道具和普通物品
        item_check = objSoup.find('span', class_ ="skillName").text 
        item_check = remove_spaces_and_tag(item_check)
        if item_check == "[寶可夢道具規則]":
            種類 = "寶可夢道具"

        #討論係咪要卡圖？ (好似要) ()
        try:
            linkTag = objSoup.select("section.imageColumn img") #提取卡圖連結的 HTML Tag
        except:
            卡圖連結 = "Error"
        else: 
            for link in linkTag:
                卡圖連結 = link.get('src') #從 HTML Tag 提取擴充包角標連結
               

        #討論需不需要對戰標記？

        try:
            對戰標記 = objSoup.find('span', class_ ="alpha").text
            對戰標記 = remove_spaces_and_tag(對戰標記)
        except:
            對戰標記 = "Error"

        try:
            linkTag = objSoup.select("section.expansionLinkColumn a") #提取擴充包角標連結的 HTML Tag
        except:
            彈數 = "Error"
        else: 
            for link in linkTag:
                彈數 = link.get('href') #從 HTML Tag 提取擴充包角標連結
                彈數 = re.sub(r'^.*?=', '', 彈數, 0) #利用正則表達式清除多餘部分
                彈數 = "PTCG, " + 彈數

        try:
            編號 = objSoup.find('span', class_ ="collectorNumber").text
        except:
            編號 = "Error"
        else:
            編號 = remove_spaces_and_tag(編號)
            編號 = re.sub(r'/.*?$', '', 編號, 0) #清除 / 後所有字, eg: '090/190' => '090'。 討論需不需要清除前置0？
            編號 = re.sub(r'^0', '', 編號, 0) #清除前置0
            編號 = re.sub(r'^0', '', 編號, 0) #清除前置0

        Handle = 卡名 + "(" + 彈數 + ")"

        if 編號 == 卡名 == 種類 == 對戰標記:
            continue
        else:
            
            csvWriter.writerow([webpage_No, Handle, 卡名, 彈數, 編號, 種類, 對戰標記, 卡圖連結]) #填寫資料
        

    csvFile.close()
    print("全部資料下載完畢。")

main()